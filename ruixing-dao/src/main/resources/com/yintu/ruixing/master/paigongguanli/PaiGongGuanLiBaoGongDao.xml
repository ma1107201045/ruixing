<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yintu.ruixing.master.paigongguanli.PaiGongGuanLiBaoGongDao">
  <resultMap id="BaseResultMap" type="com.yintu.ruixing.paigongguanli.PaiGongGuanLiBaoGongEntity">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="uid" jdbcType="INTEGER" property="uid" />
    <result column="userid" jdbcType="INTEGER" property="userid" />
    <result column="datetime" jdbcType="TIMESTAMP" property="datetime" />
    <result column="workContent" jdbcType="VARCHAR" property="workcontent" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="longitude"  property="longitude" />
    <result column="latitude"  property="latitude" />
    <result column="qita" jdbcType="INTEGER" property="qita" />
    <result column="fileName" jdbcType="VARCHAR" property="filename" />
    <result column="filePath" jdbcType="VARCHAR" property="filepath" />
    <result column="createName" jdbcType="VARCHAR" property="createname" />
    <result column="createTime" jdbcType="TIMESTAMP" property="createtime" />
    <result column="updateName" jdbcType="VARCHAR" property="updatename" />
    <result column="updateTime" jdbcType="TIMESTAMP" property="updatetime" />
    <result column="name" jdbcType="VARCHAR" property="truename"/>
    <result column="xianduan" jdbcType="VARCHAR" property="xianduan"/>
    <result column="department" jdbcType="VARCHAR" property="department"/>
    <result column="coordinationuserid" jdbcType="INTEGER" property="coordinationuserid"/>
    <result column="isnotover" jdbcType="INTEGER" property="isnotover"/>
  </resultMap>
  <sql id="Base_Column_List">
    id, uid, userid, datetime, workContent, address, longitude, latitude, qita, fileName, 
    filePath, createName, createTime, updateName, updateTime,xianduan,department,coordinationuserid,isnotover
  </sql>


  <!--根据条件查询报工列表-->
  <select id="findAllChuChaiPeopele"   resultMap="BaseResultMap">
    SELECT
        mpb.userid,
        address,
        longitude,
        latitude
    FROM
        mro_paigongguanli_baogong mpb,
        mro_paigongguanli_paigongdan mpp
    WHERE
        mpb.userid = mpp.paiGongPeople
        and mpp.paiGongState=3
        and (mpb.datetime between #{lastDateTime} and #{nowDateTime})
        GROUP BY mpb.userid
  </select>



  <!--根据条件查询报工列表-->
  <select id="findAllBaoGongAndAllComment"   resultMap="BaseResultMap">
    select
    bg.id,
    uid,
    bg.userid,
    datetime,
    workContent,
    us.name
    from
    mro_paigongguanli_baogong bg,
    mro_paigongguanli_user us
    where
      bg.userid = us.userid
      AND us.isdelete = 1
      AND  bg.datetime = #{riqi}
      AND  bg.userid=#{userid}
    order by bg.id desc
  </select>


  <!--根据条件查询报工列表-->
  <select id="findBaoGongBySomethings"   resultMap="BaseResultMap">
    select
    bg.id,
    uid,
    bg.userid,
    datetime,
    workContent,
    address,
    longitude,
    latitude,
    qita,
    fileName,
    filePath,
    bg.createName,
    bg.createTime,
    bg.updateName,
    bg.updateTime,
    xianduan,
    bg.department,
    coordinationuserid,
    isnotover,
    us.name
    from
    mro_paigongguanli_baogong bg,
    mro_paigongguanli_user us
    <where>
      bg.userid = us.userid
      AND us.isdelete = 1
      AND ( bg.datetime BETWEEN #{startTime} AND #{endTime} )
      <if test="userid!=null and userid!=''">
        AND  bg.userid=#{userid}
      </if>
      <if test="xianDuan!=null and xianDuan!=''">
        AND xianduan like concat('%',#{xianDuan},'%')
      </if>
      <if test="isNotClose!=null and isNotClose!=''">
        AND isnotover=#{isNotClose}
      </if>
      <if test="baoGongType==1">
        AND ( bg.qita = 1 OR bg.qita = 2 )
      </if>
      <if test="baoGongType==3">
        AND ( bg.qita = 3 OR bg.qita = 4 )
      </if>
      <if test="baoGongType==5">
        AND ( bg.qita = 5 OR bg.qita = 6 )
      </if>
    </where>
    order by bg.id desc
  </select>


  <!--初始化查询报工列表-->
  <select id="findAllBaoGong"   resultMap="BaseResultMap">
    select
    bg.id,
    uid,
    bg.userid,
    datetime,
    workContent,
    address,
    longitude,
    latitude,
    qita,
    fileName,
    filePath,
    bg.createName,
    bg.createTime,
    bg.updateName,
    bg.updateTime,
    xianduan,
    bg.department,
    coordinationuserid,
    isnotover,
    us.name
    from
    mro_paigongguanli_baogong bg,
    mro_paigongguanli_user us
    <where>
      bg.userid = us.userid
      AND us.isdelete = 1
      AND ( bg.isnotover = 1 OR bg.datetime BETWEEN #{yesterdayDate} AND #{tommorowDate} )
      <if test="baoGongType==1">
        AND ( bg.qita = 1 OR bg.qita = 2 )
      </if>
      <if test="baoGongType==3">
        AND ( bg.qita = 3 OR bg.qita = 4 )
      </if>
      <if test="baoGongType==5">
        AND ( bg.qita = 5 OR bg.qita = 6 )
      </if>
    </where>
    order by bg.id desc
  </select>


  <!--根据uid 查询对应的经纬度-->
  <select id="findJingWeiDuByUid"  resultMap="BaseResultMap">
    select
    longitude,latitude
    from mro_paigongguanli_baogong
    where userid = #{uid,jdbcType=INTEGER}
     ORDER BY datetime limit 1
  </select>


  <!--根据uid 查询对应的地址-->
  <select id="findAdressByUid" resultType="java.lang.String">
    SELECT
        address
    FROM
        mro_paigongguanli_baogong
    WHERE
        userid = #{uid}
    ORDER BY datetime limit 1
  </select>

  <!--查询报工列表--> <!--  AND ( bg.uid = #{senderid} OR bg.userid = #{senderid} )-->
  <select id="findAllBaoGongByUid"   resultMap="BaseResultMap">
    select
    bg.<include refid="Base_Column_List" />,
    us.true_name
    from
    mro_paigongguanli_baogong bg,
    tb_user us
    <where>
      bg.userid=us.id
      <if test="datetime!=null">
        and datetime =#{datetime}
      </if>
    </where>
   order by bg.id desc
  </select>

  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from mro_paigongguanli_baogong
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from mro_paigongguanli_baogong
    where id = #{id,jdbcType=INTEGER}
  </delete>


  <!--新增报工-->
  <insert id="insertSelective" parameterType="com.yintu.ruixing.paigongguanli.PaiGongGuanLiBaoGongEntity" useGeneratedKeys="true" keyProperty="id">
    insert into mro_paigongguanli_baogong
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="uid != null">
        uid,
      </if>
      <if test="userid != null">
        userid,
      </if>
      <if test="datetime != null">
        datetime,
      </if>
      <if test="workcontent != null">
        workContent,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="longitude != null">
        longitude,
      </if>
      <if test="latitude != null">
        latitude,
      </if>
      <if test="qita != null">
        qita,
      </if>
      <if test="filename != null">
        fileName,
      </if>
      <if test="filepath != null">
        filePath,
      </if>
      <if test="createname != null">
        createName,
      </if>
      <if test="createtime != null">
        createTime,
      </if>
      <if test="updatename != null">
        updateName,
      </if>
      <if test="updatetime != null">
        updateTime,
      </if>
      <if test="xianduan != null">
        xianduan,
      </if>
      <if test="department != null">
        department,
      </if>
      <if test="coordinationuserid != null">
        coordinationuserid,
      </if>
      <if test="isnotover != null">
        isnotover,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="uid != null">
        #{uid,jdbcType=INTEGER},
      </if>
      <if test="userid != null">
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="datetime != null">
        #{datetime,jdbcType=TIMESTAMP},
      </if>
      <if test="workcontent != null">
        #{workcontent,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="longitude != null">
        #{longitude},
      </if>
      <if test="latitude != null">
        #{latitude},
      </if>
      <if test="qita != null">
        #{qita,jdbcType=INTEGER},
      </if>
      <if test="filename != null">
        #{filename,jdbcType=VARCHAR},
      </if>
      <if test="filepath != null">
        #{filepath,jdbcType=VARCHAR},
      </if>
      <if test="createname != null">
        #{createname,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatename != null">
        #{updatename,jdbcType=VARCHAR},
      </if>
      <if test="updatetime != null">
        #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="xianduan != null">
        #{xianduan,jdbcType=VARCHAR},
      </if>
      <if test="department != null">
        #{department,jdbcType=VARCHAR},
      </if>
      <if test="coordinationuserid != null">
        #{coordinationuserid,jdbcType=INTEGER},
      </if>
      <if test="isnotover != null">
        #{isnotover,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.yintu.ruixing.paigongguanli.PaiGongGuanLiBaoGongEntity">
    update mro_paigongguanli_baogong
    <set>
      <if test="uid != null">
        uid = #{uid,jdbcType=INTEGER},
      </if>
      <if test="userid != null">
        userid = #{userid,jdbcType=INTEGER},
      </if>
      <if test="datetime != null">
        datetime = #{datetime,jdbcType=TIMESTAMP},
      </if>
      <if test="workcontent != null">
        workContent = #{workcontent,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="longitude != null">
        longitude = #{longitude},
      </if>
      <if test="latitude != null">
        latitude = #{latitude},
      </if>
      <if test="qita != null">
        qita = #{qita,jdbcType=INTEGER},
      </if>
      <if test="filename != null">
        fileName = #{filename,jdbcType=VARCHAR},
      </if>
      <if test="filepath != null">
        filePath = #{filepath,jdbcType=VARCHAR},
      </if>
      <if test="createname != null">
        createName = #{createname,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null">
        createTime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatename != null">
        updateName = #{updatename,jdbcType=VARCHAR},
      </if>
      <if test="updatetime != null">
        updateTime = #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="xianduan != null">
        xianduan = #{xianduan,jdbcType=VARCHAR},
      </if>
      <if test="department != null">
        department = #{department,jdbcType=VARCHAR},
      </if>
      <if test="coordinationuserid != null">
        coordinationuserid = #{coordinationuserid,jdbcType=INTEGER},
      </if>
      <if test="isnotover != null">
        isnotover = #{isnotover,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yintu.ruixing.paigongguanli.PaiGongGuanLiBaoGongEntity">
    update mro_paigongguanli_baogong
    set uid = #{uid,jdbcType=INTEGER},
      userid = #{userid,jdbcType=INTEGER},
      datetime = #{datetime,jdbcType=TIMESTAMP},
      workContent = #{workcontent,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      longitude = #{longitude,jdbcType=REAL},
      latitude = #{latitude,jdbcType=REAL},
      qita = #{qita,jdbcType=INTEGER},
      fileName = #{filename,jdbcType=VARCHAR},
      filePath = #{filepath,jdbcType=VARCHAR},
      createName = #{createname,jdbcType=VARCHAR},
      createTime = #{createtime,jdbcType=TIMESTAMP},
      updateName = #{updatename,jdbcType=VARCHAR},
      updateTime = #{updatetime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <insert id="insert" parameterType="com.yintu.ruixing.paigongguanli.PaiGongGuanLiBaoGongEntity">
    insert into mro_paigongguanli_baogong (id, uid, userid,
      datetime, workContent, address,
      longitude, latitude, qita,
      fileName, filePath, createName,
      createTime, updateName, updateTime
      )
    values (#{id,jdbcType=INTEGER}, #{uid,jdbcType=INTEGER}, #{userid,jdbcType=INTEGER},
      #{datetime,jdbcType=TIMESTAMP}, #{workcontent,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR},
      #{longitude,jdbcType=REAL}, #{latitude,jdbcType=REAL}, #{qita,jdbcType=INTEGER},
      #{filename,jdbcType=VARCHAR}, #{filepath,jdbcType=VARCHAR}, #{createname,jdbcType=VARCHAR},
      #{createtime,jdbcType=TIMESTAMP}, #{updatename,jdbcType=VARCHAR}, #{updatetime,jdbcType=TIMESTAMP}
      )
  </insert>
</mapper>