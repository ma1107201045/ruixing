<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yintu.ruixing.master.paigongguanli.PaiGongGuanLiBaoGongFileDao">
  <resultMap id="BaseResultMap" type="com.yintu.ruixing.paigongguanli.PaiGongGuanLiBaoGongFileEntity">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="bid" jdbcType="INTEGER" property="bid" />
    <result column="file_name" jdbcType="VARCHAR" property="fileName" />
    <result column="file_path" jdbcType="VARCHAR" property="filePath" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="filesize" jdbcType="DOUBLE" property="filesize" />
    <result column="baoGongType" jdbcType="INTEGER" property="baogongtype" />
    <result column="createtime" jdbcType="TIMESTAMP" property="createtime" />
    <result column="createName" jdbcType="VARCHAR" property="createname" />
    <result column="updateTime" jdbcType="TIMESTAMP" property="updatetime" />
    <result column="updateName" jdbcType="VARCHAR" property="updatename" />
  </resultMap>
  <sql id="Base_Column_List">
    id, bid, file_name, file_path, remark, filesize, baoGongType, createtime, createName, updateTime,
    updateName
  </sql>


  <!--根据报工id  和类型  查询对应的文件-->
  <select id="findFileByBid"  resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from mro_paigongguanli_baogong_file
    where bid = #{bid,jdbcType=INTEGER}
    and baoGongType = #{baoGongType,jdbcType=INTEGER}
  </select>


  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from mro_paigongguanli_baogong_file
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from mro_paigongguanli_baogong_file
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.yintu.ruixing.paigongguanli.PaiGongGuanLiBaoGongFileEntity">
    insert into mro_paigongguanli_baogong_file (id, bid, file_name, 
      file_path, remark, filesize, 
      createtime, createName, updateTime, 
      updateName)
    values (#{id,jdbcType=INTEGER}, #{bid,jdbcType=INTEGER}, #{fileName,jdbcType=VARCHAR}, 
      #{filePath,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}, #{filesize,jdbcType=DOUBLE}, 
      #{createtime,jdbcType=TIMESTAMP}, #{createname,jdbcType=VARCHAR}, #{updatetime,jdbcType=TIMESTAMP}, 
      #{updatename,jdbcType=VARCHAR})
  </insert>

  <!--新增文件-->
  <insert id="insertSelective" parameterType="com.yintu.ruixing.paigongguanli.PaiGongGuanLiBaoGongFileEntity">
    insert into mro_paigongguanli_baogong_file
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="bid != null">
        bid,
      </if>
      <if test="fileName != null">
        file_name,
      </if>
      <if test="filePath != null">
        file_path,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="filesize != null">
        filesize,
      </if>
      <if test="baogongtype != null">
        baoGongType,
      </if>
      <if test="createtime != null">
        createtime,
      </if>
      <if test="createname != null">
        createName,
      </if>
      <if test="updatetime != null">
        updateTime,
      </if>
      <if test="updatename != null">
        updateName,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="bid != null">
        #{bid,jdbcType=INTEGER},
      </if>
      <if test="fileName != null">
        #{fileName,jdbcType=VARCHAR},
      </if>
      <if test="filePath != null">
        #{filePath,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="filesize != null">
        #{filesize,jdbcType=DOUBLE},
      </if>
      <if test="baogongtype != null">
        #{baogongtype,jdbcType=INTEGER},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="createname != null">
        #{createname,jdbcType=VARCHAR},
      </if>
      <if test="updatetime != null">
        #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatename != null">
        #{updatename,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.yintu.ruixing.paigongguanli.PaiGongGuanLiBaoGongFileEntity">
    update mro_paigongguanli_baogong_file
    <set>
      <if test="bid != null">
        bid = #{bid,jdbcType=INTEGER},
      </if>
      <if test="fileName != null">
        file_name = #{fileName,jdbcType=VARCHAR},
      </if>
      <if test="filePath != null">
        file_path = #{filePath,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="filesize != null">
        filesize = #{filesize,jdbcType=DOUBLE},
      </if>
      <if test="baogongtype != null">
        baoGongType = #{baogongtype,jdbcType=INTEGER},
      </if>
      <if test="createtime != null">
        createtime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="createname != null">
        createName = #{createname,jdbcType=VARCHAR},
      </if>
      <if test="updatetime != null">
        updateTime = #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatename != null">
        updateName = #{updatename,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yintu.ruixing.paigongguanli.PaiGongGuanLiBaoGongFileEntity">
    update mro_paigongguanli_baogong_file
    set bid = #{bid,jdbcType=INTEGER},
      file_name = #{fileName,jdbcType=VARCHAR},
      file_path = #{filePath,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      filesize = #{filesize,jdbcType=DOUBLE},
      createtime = #{createtime,jdbcType=TIMESTAMP},
      createName = #{createname,jdbcType=VARCHAR},
      updateTime = #{updatetime,jdbcType=TIMESTAMP},
      updateName = #{updatename,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>